/*
*
* SPDX-License-Identifier: BSD-3-Clause
*
* Copyright (c) 2016-2022, Arm Limited. All rights reserved.
*
* Redistribution and use in source and binary forms, with or without modification,
* are permitted provided that the following conditions are met:
* - Redistributions of source code must retain the above copyright notice, this
*   list of conditions and the following disclaimer.
* - Redistributions in binary form must reproduce the above copyright notice, this
*    list of conditions and the following disclaimer in the documentation and/or
*    other materials provided with the distribution.
* - Neither the name of ARM nor the names of its contributors may be used to
*    endorse or promote products derived from this software without specific prior
*    written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
* ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
* ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
*/

#if !defined( __FSM_PARAM_ID_H__ )
#define __FSM_PARAM_ID_H__


typedef enum {
    FSM_PARAM_SET_MIN_ID,

    /* SENSOR */
    FSM_PARAM_SET_SENSOR_START,
    FSM_PARAM_SET_SENSOR_STREAMING,
    FSM_PARAM_SET_SENSOR_PRESET_MODE,
    FSM_PARAM_SET_SENSOR_INFO_PRESET_NUM,
    FSM_PARAM_SET_SENSOR_ALLOC_ANALOG_GAIN,
    FSM_PARAM_SET_SENSOR_ALLOC_DIGITAL_GAIN,
    FSM_PARAM_SET_SENSOR_ALLOC_INTEGRATION_TIME,
    FSM_PARAM_SET_SENSOR_UPDATE,
    FSM_PARAM_SET_SENSOR_REG,
    FSM_PARAM_SET_SENSOR_END,

    /* CMOS */
    FSM_PARAM_SET_CMOS_START,
    FSM_PARAM_SET_EXPOSURE_TARGET,
    FSM_PARAM_SET_AE_MODE,
    FSM_PARAM_SET_MANUAL_GAIN,
    FSM_PARAM_SET_CMOS_SPLIT_STRATEGY,
    FSM_PARAM_SET_CMOS_END,

    /* GENERAL */
    FSM_PARAM_SET_GENERAL_START,
    FSM_PARAM_SET_RELOAD_CALIBRATION,
    FSM_PARAM_SET_WDR_MODE,
    FSM_PARAM_SET_REG_SETTING,
    FSM_PARAM_SET_SCENE_MODE,
    FSM_PARAM_SET_TEMPER_MODE,
    FSM_PARAM_SET_TEMPER4_MODE,
    FSM_PARAM_SET_TEMPER4_COMPRESS_PIXEL_MODE,
    FSM_PARAM_SET_TEMPER4_COMPRESS_META_MODE,
    FSM_PARAM_SET_FR_RAW_BYPASS,
    FSM_PARAM_SET_HDMI_4K,
    FSM_PARAM_SET_GENERAL_END,

    /* AE */
    FSM_PARAM_SET_AE_START,
    FSM_PARAM_SET_AE_INIT,
    FSM_PARAM_SET_AE_STATS,
    FSM_PARAM_SET_AE_ROI,
    FSM_PARAM_SET_AE_END,

    /* AWB */
    FSM_PARAM_SET_AWB_START,
    FSM_PARAM_SET_AWB_STATS,
    FSM_PARAM_SET_AWB_MODE,
    FSM_PARAM_SET_AWB_INFO,
    FSM_PARAM_SET_AWB_END,

    /* AF */
    FSM_PARAM_SET_AF_START,
    FSM_PARAM_SET_AF_MODE,
    FSM_PARAM_SET_AF_MANUAL_POS,
    FSM_PARAM_SET_AF_ROI,
    FSM_PARAM_SET_AF_INPUT_ROI_RELOAD,
    FSM_PARAM_SET_AF_STATS,
    FSM_PARAM_SET_AF_LENS_REG,
    FSM_PARAM_SET_AF_END,

    /* COLOR_MATRIX */
    FSM_PARAM_SET_COLOR_MATRIX_START,
    FSM_PARAM_SET_CCM_INFO,
    FSM_PARAM_SET_CCM_CHANGE,
    FSM_PARAM_SET_SHADING_MESH_RELOAD,
    FSM_PARAM_SET_MANUAL_CCM,
    FSM_PARAM_SET_SHADING_STRENGTH,
    FSM_PARAM_SET_COLOR_MATRIX_END,

    /* PURPLE_FRINGE */
    FSM_PARAM_SET_PURPLE_FRINGE_START,
    FSM_PARAM_SET_PURPLE_FRINGE_INIT,
    FSM_PARAM_SET_PURPLE_FRINGE_END,

    /* IRIDIX */
    FSM_PARAM_SET_IRIDIX_START,
    FSM_PARAM_SET_IRIDIX_INIT,
    FSM_PARAM_SET_IRIDIX_END,

    /* NOISE_REDUCTION */
    FSM_PARAM_SET_NOISE_REDUCTION_START,
    FSM_PARAM_SET_NOISE_REDUCTION_MODE,
    FSM_PARAM_SET_NOISE_REDUCTION_END,

    /* CROP */
    FSM_PARAM_SET_CROP_START,
    FSM_PARAM_SET_CROP_SETTING,
    FSM_PARAM_SET_CROP_END,

    /* SHARPENING */
    FSM_PARAM_SET_SHARPENING_START,
    FSM_PARAM_SET_SHARPENING_INIT,
    FSM_PARAM_SET_SHARPENING_MULT,
    FSM_PARAM_SET_SHARPENING_STRENGTH,
    FSM_PARAM_SET_SHARPENING_END,

    /* MATRIX_YUV */
    FSM_PARAM_SET_MATRIX_YUV_START,
    FSM_PARAM_SET_MATRIX_YUV_FR_OUT_FMT,
    FSM_PARAM_SET_MATRIX_YUV_DS1_OUT_FMT,
    FSM_PARAM_SET_MATRIX_YUV_SATURATION_STRENGTH,
    FSM_PARAM_SET_MATRIX_YUV_HUE_THETA,
    FSM_PARAM_SET_MATRIX_YUV_BRIGHTNESS_STRENGTH,
    FSM_PARAM_SET_MATRIX_YUV_CONTRAST_STRENGTH,
    FSM_PARAM_SET_MATRIX_YUV_COLOR_MODE,
    FSM_PARAM_SET_MATRIX_YUV_END,

    /* GAMMA_ACAMERA */
    FSM_PARAM_SET_GAMMA_ACAMERA_START,
    FSM_PARAM_SET_GAMMA_STATS,
    FSM_PARAM_SET_GAMMA_ACAMERA_END,

    /* DMA_WRITER */
    FSM_PARAM_SET_DMA_WRITER_START,
    FSM_PARAM_SET_DMA_PIPE_SETTING,
    FSM_PARAM_SET_DMA_READER_OUTPUT,
    FSM_PARAM_SET_DMA_READER_OFFSET_X,
    FSM_PARAM_SET_DMA_READER_OFFSET_Y,
    FSM_PARAM_SET_DMA_VFLIP,
    FSM_PARAM_SET_DMA_FPS_THROTTLING_FACTOR,
    FSM_PARAM_SET_DMA_WRITER_M2M_BUF,
    FSM_PARAM_SET_DMA_WRITER_END,

    /* MONITOR */
    FSM_PARAM_SET_MONITOR_START,
    FSM_PARAM_SET_MON_ERROR_REPORT,
    FSM_PARAM_SET_MON_RESET_ERROR,
    FSM_PARAM_SET_MON_AE_FLOW,
    FSM_PARAM_SET_MON_AWB_FLOW,
    FSM_PARAM_SET_MON_GAMMA_FLOW,
    FSM_PARAM_SET_MON_IRIDIX_FLOW,
    FSM_PARAM_SET_MON_STATUS_AE,
    FSM_PARAM_SET_MON_STATUS_AWB,
    FSM_PARAM_SET_MON_STATUS_GAMMA,
    FSM_PARAM_SET_MON_STATUS_IRIDIX,
    FSM_PARAM_SET_MONITOR_END,

    FSM_PARAM_SET_MAX_ID,
} fsm_param_set_id_t;


typedef enum {
    FSM_PARAM_GET_MIN_ID = 10000,

    /* SENSOR */
    FSM_PARAM_GET_SENSOR_START,
    FSM_PARAM_GET_SENSOR_INFO,
    FSM_PARAM_GET_SENSOR_LINES_SECOND,
    FSM_PARAM_GET_SENSOR_STREAMING,
    FSM_PARAM_GET_SENSOR_PARAM,
    FSM_PARAM_GET_SENSOR_INFO_PRESET_NUM,
    FSM_PARAM_GET_SENSOR_REG,
    FSM_PARAM_GET_SENSOR_ID,
    FSM_PARAM_GET_SENSOR_MAX_RESOLUTION,
    FSM_PARAM_GET_SENSOR_END,

    /* CMOS */
    FSM_PARAM_GET_CMOS_START,
    FSM_PARAM_GET_CMOS_EXPOSURE_LOG2,
    FSM_PARAM_GET_CMOS_EXPOSURE_RATIO,
    FSM_PARAM_GET_FRAME_EXPOSURE_SET,
    FSM_PARAM_GET_CMOS_TOTAL_GAIN,
    FSM_PARAM_GET_FPS,
    FSM_PARAM_GET_AE_MODE,
    FSM_PARAM_GET_GAIN,
    FSM_PARAM_GET_CMOS_EXP_WRITE_SET,
    FSM_PARAM_GET_CMOS_SPLIT_STRATEGY,
    FSM_PARAM_GET_CMOS_END,

    /* GENERAL */
    FSM_PARAM_GET_GENERAL_START,
    FSM_PARAM_GET_WDR_MODE,
    FSM_PARAM_GET_CALC_FE_LUT_OUTPUT,
    FSM_PARAM_GET_REG_SETTING,
    FSM_PARAM_GET_SCENE_MODE,
    FSM_PARAM_GET_TEMPER_MODE,
    FSM_PARAM_GET_TEMPER4_MODE,
    FSM_PARAM_GET_TEMPER4_COMPRESS_PIXEL_MODE,
    FSM_PARAM_GET_TEMPER4_COMPRESS_META_MODE,
    FSM_PARAM_GET_FR_RAW_BYPASS,
    FSM_PARAM_GET_HDMI_4K,
    FSM_PARAM_GET_GENERAL_END,

    /* AE */
    FSM_PARAM_GET_AE_START,
    FSM_PARAM_GET_AE_INFO,
    FSM_PARAM_GET_AE_HIST_INFO,
    FSM_PARAM_GET_AE_ROI,
    FSM_PARAM_GET_AE_STATE,
    FSM_PARAM_GET_AE_END,

    /* AWB */
    FSM_PARAM_GET_AWB_START,
    FSM_PARAM_GET_AWB_INFO,
    FSM_PARAM_GET_AWB_MODE,
    FSM_PARAM_GET_AWB_STATE,
    FSM_PARAM_GET_AWB_END,

    /* AF */
    FSM_PARAM_GET_AF_START,
    FSM_PARAM_GET_AF_INFO,
    FSM_PARAM_GET_AF_MODE,
    FSM_PARAM_GET_AF_STATE,
    FSM_PARAM_GET_LENS_PARAM,
    FSM_PARAM_GET_AF_MANUAL_POS,
    FSM_PARAM_GET_AF_ROI,
    FSM_PARAM_GET_AF_LENS_REG,
    FSM_PARAM_GET_AF_LENS_STATUS,
    FSM_PARAM_GET_CAF_STATE,
    FSM_PARAM_GET_AF_END,

    /* COLOR_MATRIX */
    FSM_PARAM_GET_COLOR_MATRIX_START,
    FSM_PARAM_GET_CCM_INFO,
    FSM_PARAM_GET_SHADING_ALPHA,
    FSM_PARAM_GET_SHADING_MESH_MAP,
    FSM_PARAM_GET_SHADING_STRENGTH,
    FSM_PARAM_GET_COLOR_MATRIX_END,

    /* IRIDIX */
    FSM_PARAM_GET_IRIDIX_START,
    FSM_PARAM_GET_IRIDIX_STRENGTH,
    FSM_PARAM_GET_IRIDIX_CONTRAST,
    FSM_PARAM_GET_IRIDIX_DARK_ENH,
    FSM_PARAM_GET_IRIDIX_GLOBAL_DG,
    FSM_PARAM_GET_IRIDIX_END,

    /* NOISE_REDUCTION */
    FSM_PARAM_GET_NOISE_REDUCTION_START,
    FSM_PARAM_GET_NOISE_REDUCTION_MODE,
    FSM_PARAM_GET_NOISE_REDUCTION_END,

    /* CROP */
    FSM_PARAM_GET_CROP_START,
    FSM_PARAM_GET_CROP_INFO,
    FSM_PARAM_GET_CROP_SETTING,
    FSM_PARAM_GET_CROP_END,

    /* SHARPENING */
    FSM_PARAM_GET_SHARPENING_START,
    FSM_PARAM_GET_SHARPENING_STRENGTH,
    FSM_PARAM_GET_SHARPENING_END,

    /* MATRIX_YUV */
    FSM_PARAM_GET_MATRIX_YUV_START,
    FSM_PARAM_GET_MATRIX_YUV_FR_OUT_FMT,
    FSM_PARAM_GET_MATRIX_YUV_DS1_OUT_FMT,
    FSM_PARAM_GET_MATRIX_YUV_SATURATION_STRENGTH,
    FSM_PARAM_GET_MATRIX_YUV_HUE_THETA,
    FSM_PARAM_GET_MATRIX_YUV_BRIGHTNESS_STRENGTH,
    FSM_PARAM_GET_MATRIX_YUV_CONTRAST_STRENGTH,
    FSM_PARAM_GET_MATRIX_YUV_COLOR_MODE,
    FSM_PARAM_GET_MATRIX_YUV_END,

    /* GAMMA_ACAMERA */
    FSM_PARAM_GET_GAMMA_ACAMERA_START,
    FSM_PARAM_GET_GAMMA_CONTRAST_RESULT,
    FSM_PARAM_GET_GAMMA_ACAMERA_END,

    /* DMA_WRITER */
    FSM_PARAM_GET_DMA_WRITER_START,
    FSM_PARAM_GET_DMA_READER_OUTPUT,
    FSM_PARAM_GET_DMA_VFLIP,
    FSM_PARAM_GET_DMA_READER_OFFSET_X,
    FSM_PARAM_GET_DMA_READER_OFFSET_Y,
    FSM_PARAM_GET_DMA_FPS_THROTTLING_FACTOR,
    FSM_PARAM_GET_DMA_WRITER_END,

    /* MONITOR */
    FSM_PARAM_GET_MONITOR_START,
    FSM_PARAM_GET_MON_ERROR,
    FSM_PARAM_GET_MON_STATUS_AE,
    FSM_PARAM_GET_MON_STATUS_AWB,
    FSM_PARAM_GET_MON_STATUS_GAMMA,
    FSM_PARAM_GET_MON_STATUS_IRIDIX,
    FSM_PARAM_GET_MONITOR_END,

    FSM_PARAM_GET_MAX_ID,
} fsm_param_get_id_t;


#endif
